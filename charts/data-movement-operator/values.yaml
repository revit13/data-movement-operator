# Default values for Fybrik.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# Overrides names
nameOverride: ""
fullnameOverride: ""

# Set to false to disable deploying cluster scoped resources.
# Note that these resources are still required for a valid
# deployment. Only set this to false if you deployed cluster
# scoped resources using a different method.

clusterScoped: true

blueprintNamespace: "fybrik-blueprints"

# Global configuration applies to multiple components installed by this chart
global:
  # Default hub for Fybrik images.
  hub: ghcr.io/fybrik
  # Default tag for Fybrik images.
  # If no value is set, the chart's appVersion will be used.
  tag: 0.5.0 
  # Default image pull policy for Fybrik images
  # Default behavior: latest images will be Always else IfNotPresent.
  # ref: https://kubernetes.io/docs/concepts/containers/images/#updating-images
  imagePullPolicy: ""
  # Reference to one or more secrets to be used when pulling images.
  # ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
  imagePullSecrets: []
  # Default connection timeout for GRPC connections.
  connectionTimeout: 120

deployCRDs: true

# Manager component
manager:
  # Set to true to deploy the manager component or false to skip its deployment.
  # Defaults to true if `coordinator.enabled` or `worker.enabled` is true.
  enabled: true
  
  # Override GRPC connection timeout in manager
  connectionTimeout: 

  # Image name or a hub/image[:tag]
  image: "dmo-manager"
  # Overrides global.imagePullPolicy
  imagePullPolicy: Always

  # Set to true to enable socat in the manager pod to forward
  # traffic from a localhost registry. Used only for development.
  socat: false

  # Overrides arguments to be passed to manager container
  overrideArgs:

  # Extra environment variables to be set for manager container
  extraEnvs:
  # - name: env_name
  #   value: env_value

  replicaCount: 1
  
  serviceAccount:
    # Specifies whether a service account should be created
    create: true
    # Annotations to add to the service account
    annotations: {}
    # The name of the service account to use
    name: dmo-manager

  podAnnotations: {}

  podSecurityContext: {}
    # fsGroup: 2000

  securityContext: {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000

  resources: {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

  nodeSelector: {}

  tolerations: []

  affinity: {}

  prometheus: false

  chartVolume: ""
    # Specify a persistent volume claim, to be mounted by the manager, that can contain
    # helm charts that can be referenced by a FybrikModule.  Manager will check if a chart
    # is available on volume first, then try to pull from a Docker registry if it does not exist.
    # To populate the volume, create a 'charts' directory at the root of the mount,
    # and place helm charts within the charts directory.

# S3 mock service installed in fybrik namespace
s3mock:
  enabled: false
